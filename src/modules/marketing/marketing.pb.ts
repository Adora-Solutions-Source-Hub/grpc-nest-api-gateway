// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: marketing.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "marketing";

export interface CreateMarketingRequest {
  productId: number;
  quantity: number;
  userId: number;
}

export interface CreateMarketingResponse {
  status: number;
  error: string[];
  id: number;
}

export const MARKETING_PACKAGE_NAME = "marketing";

export interface MarketingServiceClient {
  createMarketing(request: CreateMarketingRequest): Observable<CreateMarketingResponse>;
}

export interface MarketingServiceController {
  createMarketing(
    request: CreateMarketingRequest,
  ): Promise<CreateMarketingResponse> | Observable<CreateMarketingResponse> | CreateMarketingResponse;
}

export function MarketingServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createMarketing"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("MarketingService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("MarketingService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const MARKETING_SERVICE_NAME = "MarketingService";
